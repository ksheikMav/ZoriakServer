var express = require('express');
var app = express();
var mongojs = require('mongojs');
var bodyParser = require('body-parser');
var fs = require('fs');
var busboy = require("connect-busboy");
var inspect = require('util').inspect;


//user documents
var users = mongojs('mongodb://zoriak:test@ds111718.mlab.com:11718/zoriakdb', ['Users'], ['Recordings']);
//recordings documents
var recordings = mongojs('mongodb://zoriak:test@ds111718.mlab.com:11718/zoriakdb', ['Recordings']);
var iranianRecordings = mongojs('mongodb://zoriak:test@ds111718.mlab.com:11718/zoriakdb', ['iran'] )

app.use(bodyParser.json());
app.use(busboy());

var ObjectId = mongojs.ObjectId;

//route to index page..
app.get('/', function(req,res) {
	// res.sendFile('login.html', { root: './client/' });
	res.send("The Zoriak Server and Database");

});

//handles all functionality for users..
app.get('/Users', function(req,res){
	users.Users.find(function(err,Users){
		res.json(Users);
	});
});

//inserting a user into the database..
app.post('/Users', function(req,res){
	//code to check whether a given MRN is in the db or not.. reject the insertion if so
	var mrn = req.body.MRN;
	users.Users.findOne({"MRN": mrn}, function(err, user){
		if(user != null) {
			res.json("MRN already used.. please choose a different one");
			res.send(404);
		}
		else {
			users.Users.insert(req.body, function(err, user) {
				console.log("Inserting a user into the database..");
				res.json({"id" : user._id});

			});
		}
	});
});
//will show each recording for a given user..copy the mongo generated mongo id...
app.get('/Users/:id', function(req,res){
  var id = req.params.id;
	recordings.Recordings.find({"user-id": id}, function(err, recordings){
		if(recordings.length == 0) {
			res.json("No Recordings Found..")
		}
		else { 
			res.json(recordings);
		}

	});
});
app.get('/Users/:id/download', function(req,res) {
	console.log();

	var fileName = req.params.fileId;
	var file = __dirname + '/recordings/' + fileName;
	res.download(file);
});
//delete every recording for a given user..
app.delete('/Users/:id', function(req, res) {
	var id = req.params.id;
	users.Users.remove({_id: ObjectId(id)});
	console.log("Removing user from the database..")
	res.json("User Successfully Removed!")
});
//table similar to the database that we have right now.. shows every recording generated by the app, users will use this to find recording id's
app.get('/Recordings', function(req, res) {
	recordings.Recordings.find(function(err, Recordings) {

		res.json(Recordings);
	});
});
app.post('/Recordings', function(req,res){
  recordings.Recordings.insert(req.body, function(err, Recordings) {
  	if(err) {
  		res.send(err);
  	}
  	else { 
  		//upload into mongo database sucessfull..
  		console.log("Inserting a new recording into the database..");
        res.json("Recording Successfully Uploaded!");
  	}

  });
});

app.post('/Recordings/Upload', function(req,res) {
	//upload audio file to recording directory
	var fstream;
    req.pipe(req.busboy);
	req.busboy.on('file', function (fieldname, file, filename) {
            console.log("Uploading: " + filename);
            //Path where audio recording will be uploaded
            fstream = fs.createWriteStream(__dirname + '/recordings/' + filename);
            file.pipe(fstream);
            fstream.on('close', function () {    
                console.log("Upload Finished of " + filename);   
                res.json("Audio Recording Sucessfully Stored!");           
            });
        });

});
app.get('/Recordings/Download/:id', function(req,res) {
	//grab file id and query database for file name..
	var recordingId = req.params.id;
	var fileName = ''
	recordings.Recordings.findOne({"_id": ObjectId(recordingId)},function(err, recording) {
		if(err) {
			res.send("Couldn't find your selected Recording Id.");
			return
		}
		else {
			fileName = recording.FileName
			var file = __dirname + '/recordings/' + fileName;
			res.download(file);
		}
	});

});
app.delete('/Recordings/:id', function(req,res) {
	var id = req.params.id;
	recordings.Recordings.remove({_id: ObjectId(id)});
	console.log("Removing a recording from the database..")
	res.json("Recording Successfully Deleted!")


});
//used for testing recordings coming from iran.. implemented in iphone app currently
app.post('/iran', function(req, res) {
	console.log(req.body);
	iranianRecordings.iran.insert(req.body, function(err, iran) {
		console.log("incoming recording from iran..");
		res.json("Iranian Recording Sucessfully Uploaded..");
	})

});
app.get('*', function(req,res){
	res.sendStatus(404);

});



console.log('Running Server...');
app.listen(process.env.PORT || 5000)